from django.contrib.auth import login
from django.test import SimpleTestCase
from django.urls import resolve, reverse
from blog.views import home, about, PostListViews, PostDetailViews, PostCreateView, PostUpdateView
from users.views import register, profile
from django.contrib.auth import views as auth_views


class TestUrls(SimpleTestCase):

    # To test home url.
    def test_home_url_is_resolved(self):
        url = reverse('blog-home')
        # print(resolve(url))
        self.assertEquals(resolve(url).func.__name__, PostListViews.as_view().__name__)

    # To test about url.
    def test_about_url_is_resolved(self):
        url = reverse('blog-about')
        # print(resolve(url))
        self.assertEquals(resolve(url).func, about)

    # To test register url.
    def test_register_url_is_resolved(self):
        url = reverse('register')
        # print(resolve(url))
        self.assertEquals(resolve(url).func, register)

    # To test profile url.
    def test_profile_url_is_resolved(self):
        url = reverse('profile')
        self.assertEquals(resolve(url).func, profile)

    # To test login url.
    # class-based views need to be compared by name, as the functions generated by as_view() won't be equal.
    def test_login_url_is_resolved(self):
        url = reverse('login')
        self.assertEquals(resolve(url).func.__name__, auth_views.LoginView.as_view().__name__)

    # To test logout url.
    def test_logout_url_is_resolved(self):
        url = reverse('logout')
        self.assertEquals(resolve(url).func.__name__, auth_views.LogoutView.as_view().__name__)

    # To test individual post url
    def test_Post_Detail_url_is_resolved(self):
        url = reverse('post-detail', args=['2'])
        self.assertEquals(resolve(url).func.__name__, PostDetailViews.as_view().__name__)

    # To test create new post url
    def test_Create_Post_url_is_resolved(self):
        url = reverse('post-create')
        self.assertEquals(resolve(url).func.__name__, PostCreateView.as_view().__name__)

    # To test individual update post url
    def test_Post_Update_url_is_resolved(self):
        url = reverse('post-update', args=['2'])
        self.assertEquals(resolve(url).func.__name__, PostUpdateView.as_view().__name__)